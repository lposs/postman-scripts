{
	"id": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
	"name": "Rest SMS",
	"description": "",
	"order": [
		"495fee57-fd8d-3d30-e25f-ea58b99a558a"
	],
	"folders": [
		{
			"id": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3",
			"name": "global-config/authentication",
			"description": "",
			"order": [
				"165d96de-75e7-3669-9212-6f4e8b8b06a2",
				"f5a955d4-fca5-c296-190d-38739d2d5f9d",
				"c9481f19-ac02-e132-2c34-970f258b551c",
				"7daa4ff1-88b5-9ef3-a2ce-7ddd38b81be1",
				"e3d9f5bd-e68e-0411-f329-6aeb8c0e8e3b",
				"ce1315bb-1d75-717a-52ae-6d95e57a0283",
				"58011e03-c4ed-711f-f906-1d8ead8d0521",
				"d51d1836-37d6-0783-95a9-cdc2d782b554",
				"7aad15cc-7a89-a00d-f677-41e14a0370c1",
				"585a42cd-e7e4-e08d-67e4-bbb9c036ae28",
				"fca9a8e9-2441-a537-6bff-d6137d62ae50",
				"18e4098a-915d-e453-3236-b895391b2ad7",
				"b46866b8-a3eb-9cc1-0945-c53d3ef107ba",
				"87aeb28f-d295-f665-fb25-7cfd5ef0ea45",
				"97825b45-8eba-cecb-6d36-b0f5027a6b98"
			],
			"owner": "302903",
			"collectionId": "2d1d67e0-eea9-df31-8eb6-539b75dd29f6"
		},
		{
			"id": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671",
			"name": "global-config/servers",
			"description": "",
			"order": [
				"8f2132da-b94c-ea5f-4689-0f0e997fb0c1",
				"6abc4888-26c2-8423-bf28-143b9d606152",
				"8cd59646-df65-d6ef-e919-dbeb7dd974ec",
				"2a9c3a52-fcc9-389f-55e3-f75f766a755d",
				"26498987-a938-8733-99ad-27e7d20e50d2",
				"60f4d5e1-56ce-b222-9276-bf7f3b6b364e",
				"b5967319-a21b-8183-8512-d20a5ea56636",
				"0a616743-9484-c99c-fcc1-b5e81a8e102b"
			],
			"owner": "302903",
			"collectionId": "2d1d67e0-eea9-df31-8eb6-539b75dd29f6"
		},
		{
			"id": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55",
			"name": "global-config/services",
			"description": "",
			"order": [
				"3504e7bd-df6c-5989-0754-4550dbf8d90b",
				"2f7f6046-a3be-2428-bfb1-b939925ce67f",
				"562061f3-c120-61b5-9168-56d36dcb9f9c",
				"a9e63ca0-6e6e-eac6-5cbc-5a95adcd1d8b",
				"1983c940-b6e3-da79-b318-ab6d9b14669b",
				"9df6efd0-2705-4510-587e-bce35ad2fbb5",
				"cda55239-32f4-d3c9-052f-4b90a7f9cb1f",
				"a18c949c-71b1-9bf1-b448-b7c4195f3094",
				"f898db8d-5493-2d76-c3de-5bf0e1b57f57",
				"d86d4770-c9e4-9a4f-0279-26a8229f35cf",
				"525650fd-fa77-a353-b5db-b04db88c5863",
				"e1412b51-9da1-3406-27d6-38418aaf0522",
				"8d2acb79-b2a6-2ffa-9f4d-8bb1c826570b",
				"db27166b-36e0-213f-a062-71a0b3c37a64",
				"b3ff4a4b-d71c-3138-7a44-60c1400deee7",
				"307a247f-8245-a871-a066-6db71b32d4bc",
				"67acc68a-a9ce-d83a-dc12-ca8fda13e6be"
			],
			"owner": "302903",
			"collectionId": "2d1d67e0-eea9-df31-8eb6-539b75dd29f6"
		},
		{
			"id": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08",
			"name": "global-config/sites",
			"description": "",
			"order": [
				"daeb34c0-4987-3cfa-2790-3d0790218ab5",
				"f2e3d9c3-37ee-bc1d-1aa8-484bf8f885b1",
				"47eeb600-cc9a-8d95-9e2f-88a9de32c64d",
				"119adfcd-b84b-0e6c-5d88-566dbb2325bf",
				"74bf0b25-133e-c701-5366-0633965afa5b",
				"1415007f-ffdc-256a-a878-8e87235d5301",
				"d6acd9e7-b20a-d01d-840d-0c7985bbf218"
			],
			"owner": "302903",
			"collectionId": "2d1d67e0-eea9-df31-8eb6-539b75dd29f6"
		},
		{
			"id": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"name": "identity",
			"description": "",
			"order": [
				"c00c5183-6e0a-4949-2697-3fd47e273bfd",
				"03052580-8c15-7cdd-4db5-5fe986839e00",
				"10a6f326-8ed2-2add-43b5-779b73061e82",
				"2e51f747-9ddb-b820-2633-a578f1409ab4",
				"b2cd841a-b222-7913-c06f-2e9880eebea8",
				"cc5de208-3761-bfde-17b6-037edd7a7def",
				"3a5cf04f-542a-ba48-67c8-1f4a29586790",
				"5939f48a-70f4-7f5c-18c3-2788d505acce",
				"64538e82-e688-b026-8b95-ca42098ffe04",
				"41198be0-2268-8a5a-b5d8-7a19a050a98a",
				"4f9b2d08-a75e-40e5-eedb-c6d5db3be387",
				"7444d2ca-a6ff-dbbb-6ff9-04055147c2b1"
			],
			"owner": "302903",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281"
		},
		{
			"id": "cfe78fc0-91d2-a002-0a54-abe1f20814ff",
			"name": "realm-config/authentication",
			"description": "",
			"order": [
				"16e47972-185f-7233-b8f0-8faa14337b72",
				"d4e18da4-7804-3475-bc9c-6a5c5acb78bd",
				"6be03943-ea37-398e-42bb-0fc0b25ec92a",
				"b18aecaa-2d89-f1ed-e721-be3e3e9a1af2",
				"e255d9ed-83d3-3125-186d-fa69fc084f5f",
				"bb98deb9-7d34-8d28-9f52-a325ee57f5d9",
				"48d4017b-976d-fcf9-a055-6cc5de85927a",
				"3d574ff4-2836-e1f9-54ce-f3c55b03a890",
				"ddcb0a6d-e3ed-362d-b33b-6335c756c7a2",
				"810162eb-b8b5-3768-9635-8eac380c4668",
				"2635797d-e7c0-02a4-2c8f-8931f4c04168",
				"d1041b3e-e1ef-a751-d6d3-2b65a167da62",
				"e480014d-b7f8-ee02-4e2a-e38720ae6b50",
				"eb271a08-558c-5f9c-2048-a88b913b8583",
				"3d78bb2e-ea90-6813-c7bd-2a00c1a91cc6",
				"28e1434a-302a-a5ed-bb92-d80037cfb214",
				"3a6fd535-bb5a-5641-535f-2b5b90dced24",
				"e5e04d59-4eac-443a-c8a2-3f3cd65dbbcb",
				"3a144969-6263-6c87-c21b-8eda04465eb7"
			],
			"owner": "302903",
			"collectionId": "2d1d67e0-eea9-df31-8eb6-539b75dd29f6"
		},
		{
			"id": "388744f6-e447-8246-185c-71297b98b794",
			"name": "realm-config/services",
			"description": "",
			"order": [
				"76a62192-e2c4-77b9-b68b-928ea188bbc3",
				"8dd36474-1f16-ca5a-957a-25a3d9328ac7",
				"b21bf6ed-ee40-00de-02ca-6cc9654f6b5d",
				"dcbebfd4-8485-954d-97b6-9780d5270c79",
				"9bf9b0d1-ab91-386f-e29e-e6eb0e0de023",
				"1e86a20c-5f44-3684-95ad-e52ce4b61341",
				"70b459b2-bc33-0ee8-0bf8-08231aac2b54",
				"9aeed0bf-fca1-8b4e-00c0-64cee790a429",
				"870966d2-82fd-c694-3100-513772423bbc",
				"56860fdc-cc16-566d-69db-f526bc6674cb",
				"b7c52332-c666-c264-7cb0-8630aaba246c",
				"d4705f3d-4804-db5f-70f0-e85c4dfb5b39",
				"bd0c0c9a-af4c-002d-0985-af34d9dea01b",
				"88beafa6-c157-abf4-a131-9de230300926",
				"29d74f11-ef96-b9e2-31ca-0e76a6526a51",
				"0c4b87ff-e990-bb87-f02d-24b5ac91362f",
				"ae47f6f4-6b73-2b13-821c-96cb92ea8e85",
				"c273d4a5-ee4d-4166-e6cf-9ecf0ee1915e",
				"89e29502-3809-75e1-7a98-4533f481c42f"
			],
			"owner": "302903",
			"collectionId": "2d1d67e0-eea9-df31-8eb6-539b75dd29f6"
		}
	],
	"timestamp": 0,
	"owner": "302903",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "03052580-8c15-7cdd-4db5-5fe986839e00",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/users?realm=/&_queryId=",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460628864946,
			"name": "users - get all users",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"responses": []
		},
		{
			"id": "0a616743-9484-c99c-fcc1-b5e81a8e102b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers/http%3A%2F%2Fopenam.example.com%3A18080%2Fopenam?_action=clone&clone_id=http%3A%2F%2Fopenam.example.com%3A38080%2Fopenam&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454518494658,
			"name": "[TODO :: AME-9683] Servers - Clone server action",
			"description": "The JATO table which lists servers includes an option to clone an\nexisting server. The REST SMS should offer an action to perform this\noperation rather than the client needing to achieve this vai multiple\nAPI calls.\n\nThe API proposed here is to send a 'clone' action to the existing\nserver resource and pass an additional query parameter 'clone_id'\nto specify the _id of the new server that gets created.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "0c4b87ff-e990-bb87-f02d-24b5ac91362f",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454282534189,
			"name": "[TODO :: AME-9666] SubSchema - Read audit service CSV handler schema",
			"description": "It doesn't seem to be possible to request the schema for a SubSchema.\n\nThis could be a peculiarity of the Audit service so it's worth trying\nthis against another realm-based service that has SubSchema.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "10a6f326-8ed2-2add-43b5-779b73061e82",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/users?realm=/&_queryId=demo",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "params",
			"name": "users - query",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460628783226,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583"
		},
		{
			"id": "119adfcd-b84b-0e6c-5d88-566dbb2325bf",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites/europe?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454452657213,
			"name": "[BUG] Sites - Update site",
			"description": "There is validation to prevent id and servers fields from being \nupdated. When these fields are removed from the update request\npayload, a 412 Precondition Failed error response is returned.\n\nIs patch supposed to be used rather than update?\n\nIf-None-Match HTTP header?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"_id\": \"europe\",\n  \"url\": \"http://openam.example.com:18080/openam\",\n  \"secondaryURLs\": []\n}",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "1415007f-ffdc-256a-a878-8e87235d5301",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454452842867,
			"name": "Sites - Read site schema",
			"description": "NB. This schema includes read-only fields",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "165d96de-75e7-3669-9212-6f4e8b8b06a2",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448300152,
			"name": "[BUG] AuthN - Create core auth settings",
			"description": "It shouldn't be possible to create 'core' settings for global authN",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n    \"_id\": \"ds\"\n}",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "16e47972-185f-7233-b8f0-8faa14337b72",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454447200915,
			"name": "[BUG] AuthN - Create core auth settings",
			"description": "It shouldn't be possible to create 'core' settings for realm authN",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n    \"_id\": \"ds\"\n}",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "18e4098a-915d-e453-3236-b895391b2ad7",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/chains?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449726116,
			"name": "[BUG?] AuthN Chain - Read auth chain instance",
			"description": "What is this reading?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "1983c940-b6e3-da79-b318-ab6d9b14669b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454430423342,
			"name": "[BUG] Service - Delete audit service",
			"description": "It should NOT be possible to delete the global configuration of a\nservice. When this API call is made, the service configuration is\nunaffected but subschema instances are deleted.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "1e86a20c-5f44-3684-95ad-e52ce4b61341",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277092117,
			"name": "Service - Update audit service",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794",
			"rawModeData": "{\n  \"auditEnabled\": false,\n  \"fieldFilterPolicy\": [\n    \"/access/http/request/queryParameters/tokenId\",\n    \"/access/http/request/headers/cache-control\",\n    \"/access/http/request/queryParameters/redirect_uri\",\n    \"/access/http/request/queryParameters/Login.Token1\",\n    \"/access/http/request/headers/accept-language\",\n    \"/config/before\",\n    \"/access/http/request/headers/%AM_AUTH_COOKIE_NAME%\",\n    \"/config/after\",\n    \"/access/http/request/queryParameters/access_token\",\n    \"/access/http/request/headers/X-OpenAM-Password\",\n    \"/access/http/request/queryParameters/id_token_hint\",\n    \"/access/http/request/headers/proxy-authorization\",\n    \"/access/http/request/queryParameters/IDToken1\",\n    \"/access/http/request/queryParameters/requester\",\n    \"/access/http/request/headers/connection\",\n    \"/access/http/request/queryParameters/sessionUpgradeSSOTokenId\",\n    \"/access/http/request/headers/content-type\",\n    \"/access/http/request/cookies/%AM_COOKIE_NAME%\",\n    \"/access/http/request/headers/accept-encoding\",\n    \"/access/http/request/headers/authorization\",\n    \"/access/http/request/headers/content-length\",\n    \"/access/http/request/headers/%AM_COOKIE_NAME%\"\n  ]\n}"
		},
		{
			"id": "2635797d-e7c0-02a4-2c8f-8931f4c04168",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/datastore?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454446173478,
			"name": "AuthN Module - Read DataStore auth module schema",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "26498987-a938-8733-99ad-27e7d20e50d2",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers/server-default/properties/general?_action=schema&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454514817798,
			"name": "[TODO :: OPENAM-8275] Servers - Read advanced properties schema (server-default)",
			"description": "It should be possible to obtain the schema for the set of \nproperties shown on any of the Configuration > Servers and Sites > \nDefault Server Settings > <tab> pages by sending a POST request to:\n\n`/json/global-config/servers/server-default/properties/<tab>?_action=schema`\n\n(where tab can be any of the following: general, security, cts, advanced, session, uma, sdk, directoryconfiguration).",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "28e1434a-302a-a5ed-bb92-d80037cfb214",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains/chain1?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448102367,
			"name": "AuthN Chain - Update auth chain instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"loginPostProcessClass\": [],\n  \"authChainConfiguration\": [],\n  \"_id\": \"chain1\",\n  \"loginFailureUrl\": [\n    \"http://updated.example.com\"\n  ],\n  \"loginSuccessUrl\": [\n    \"\"\n  ]\n}",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "29d74f11-ef96-b9e2-31ca-0e76a6526a51",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV/csv?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277480182,
			"name": "SubSchema - Delete audit service CSV handler instance (slow)",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "2a9c3a52-fcc9-389f-55e3-f75f766a755d",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers/server-default/properties/advanced?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454517065849,
			"name": "[BUG: OPENAM-8276] Servers - Read advanced properties (server-default)",
			"description": "It should be possible to obtain the values for the set of \nproperties shown on any of the Configuration > Servers and Sites > \nDefault Server Settings > <tab> pages by sending a GET request to:\n\n`/json/global-config/servers/server-default/properties/<tab>`\n\n(where tab can be any of the following: general, security, cts, advanced, session, uma, sdk, directoryconfiguration).",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "2e51f747-9ddb-b820-2633-a578f1409ab4",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/users?_action=idFromSession",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "POST",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "users - get user from session",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460628948593,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{}"
		},
		{
			"id": "2f7f6046-a3be-2428-bfb1-b939925ce67f",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454429941482,
			"name": "[BUG] Service - Create audit service",
			"description": "It should NOT be possible to create an  instance of a global\nservice: https://bugster.forgerock.org/jira/browse/OPENAM-6107\nThere should be one and only one Global configuration for each\nservice and that is created automatically during OpenAM setup.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{}",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "307a247f-8245-a871-a066-6db71b32d4bc",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_action=getAllTypes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431445135,
			"name": "[TODO :: AME-9668] SubSchema - List all subschema types",
			"description": "This request should list all SubSchema types can be added to the\ncurrent service - i.e. a listing of SubSchema types that can be\ncreated, including any that already exist in their maximum quantity.\n\nThe form of the JSON response to this call is purposely similar\nto the response to a _queryFilter except that, as this call is\nan action rather than a query filter, it doesn't support further\nfilter critera nor does it support pagination.\n\n```\n{\n  \"result\": [\n    {\"_id\":\"CSV\",\"name\":\"CSV\"},\n    {\"_id\":\"JDBC\",\"name\":\"JDBC\"},\n    {\"_id\":\"Syslog\",\"name\":\"Syslog\"}\n  ]\n}\n```\n\nFollow on actions:\n\nTo query for instances of any SubSchema type, append _id as a\nsuffix to the current URL. e.g. global-config/services/audit/CSV?_queryFilter=true\n\nTo request the schema or template for any SubSchema type, append _id as a\nsuffix to the current URL and specify the desired _action.\ne.g. global-config/services/audit/CSV?_action=schema",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "3504e7bd-df6c-5989-0754-4550dbf8d90b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454429620575,
			"name": "[TODO :: AME-9555] Service - Read all service instances",
			"description": "Performing a standard CREST CRUDPAQ Query on global-config/services\nshould return a list of JSON objects that provide summary details\nof the global service configurations.\n\nThe results of this call should be similar to the results returned\nwhen performing a standard CREST CRUDPAQ Query on \nglobal-config/authentication/modules:\n\n```\n{\n  \"result\": [\n    {\"_id\":\"audit\",\"name\":\"Audit Logging\"},\n    {\"_id\":\"dashboard\",\"name\":\"Dashboard\"},\n    {\"_id\":\"email\",\"name\":\"Email Service\"}\n  ],\n  \"resultCount\":3,\n  \"pagedResultsCookie\":null,\n  \"totalPagedResultsPolicy\":\"EXACT\",\n  \"totalPagedResults\":3,\n  \"remainingPagedResults\":-1\n}\n```\n\nFollow on actions:\n\nTo access any of the resources named in the results, append the service _id as a\nsuffix to the current URL. e.g. global-config/services/audit",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "3a144969-6263-6c87-c21b-8eda04465eb7",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448259100,
			"name": "AuthN Chain - Read auth chain template",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "3a5cf04f-542a-ba48-67c8-1f4a29586790",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/users?_queryId=",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "params",
			"name": "users - get all across realms",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460629530106,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583"
		},
		{
			"id": "3a6fd535-bb5a-5641-535f-2b5b90dced24",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains/chain1?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448128200,
			"name": "AuthN Chain - Delete auth chain instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "3d574ff4-2836-e1f9-54ce-f3c55b03a890",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/datastore/ds?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454445788287,
			"name": "AuthN Module - Read DataStore auth module instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "3d78bb2e-ea90-6813-c7bd-2a00c1a91cc6",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains/chain1?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448057754,
			"name": "AuthN Chain - Read auth chain instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "41198be0-2268-8a5a-b5d8-7a19a050a98a",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/groups?_action=create",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "POST",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "groups - create group",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460630435277,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{ \"username\": \"newGroup\" }"
		},
		{
			"id": "47eeb600-cc9a-8d95-9e2f-88a9de32c64d",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites/europe?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454452563221,
			"name": "Sites - Read site",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "48d4017b-976d-fcf9-a055-6cc5de85927a",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/datastore?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454445712433,
			"name": "AuthN Module - Create DataStore auth module instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n    \"_id\": \"ds\"\n}",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "495fee57-fd8d-3d30-e25f-ea58b99a558a",
			"name": "Login as amadmin",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Use custom OpenAM HTTP headers to perform a zero-page login (ZPL) as 'amadmin' in the top-level realm.\n\nAfter successfully performing this request, the ssoTokenId environment variable will be set for use in subsequent requests.",
			"headers": "Content-Type: application/json\nX-OpenAM-Username: amadmin\nX-OpenAM-Password: cangetinam\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{openamUrl}}/json/authenticate",
			"preRequestScript": "",
			"tests": "postman.setGlobalVariable(\"ssoTokenId\", JSON.parse(responseBody).tokenId);\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{}"
		},
		{
			"id": "4f9b2d08-a75e-40e5-eedb-c6d5db3be387",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/groups/testGroup",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "groups - get group",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460630505466,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{ \"username\": \"newGroup\" }"
		},
		{
			"id": "525650fd-fa77-a353-b5db-b04db88c5863",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431115465,
			"name": "[TODO :: AME-9665] SubSchema - Read all audit service handler instances",
			"description": "Performing a standard CREST CRUDPAQ Query on global-config/services/audit\nshould return a list of JSON objects that provide summary details\nof the SubSchema instances (of all SubSchema types).\n\nThe results of this call should be similar to the results returned\nwhen performing a standard CREST CRUDPAQ Query on \nglobal-config/authentication/modules:\n\n```\n{\n  \"result\": [\n    {\"_id\":\"csv1\",\"type\":\"CSV\",\"typeDescription\":\"CSV\"},\n    {\"_id\":\"csv2\",\"type\":\"CSV\",\"typeDescription\":\"CSV\"},\n    {\"_id\":\"jdbc\",\"type\":\"JDBC\",\"typeDescription\":\"JDBC\"}\n  ],\n  \"resultCount\":3,\n  \"pagedResultsCookie\":null,\n  \"totalPagedResultsPolicy\":\"EXACT\",\n  \"totalPagedResults\":3,\n  \"remainingPagedResults\":-1\n}\n```\n\nFollow on actions:\n\nTo access any of the resources named in the results, append type/_id as a\nsuffix to the current URL. e.g. global-config/services/audit/CSV/csv1",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "562061f3-c120-61b5-9168-56d36dcb9f9c",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454429950706,
			"name": "Service - Read audit service",
			"description": "Some services are not available under the realm-config/services\nendpoint, and are instead listed under:\nauthentication/modules\nauthentication/chains\nfederations/..\nTherefore, https://bugster.forgerock.org/jira/browse/OPENAM-6074 can\nprobably be closed as 'will not fix'\n\nIt's not clear what the 'defaults' section of the JSON response is\nsupposed to represent or where this state is coming from.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "56860fdc-cc16-566d-69db-f526bc6674cb",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277574735,
			"name": "SubSchema - Create audit service CSV handler instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794",
			"rawModeData": "{\n  \"rotationInterval\": \"-1\",\n  \"rotationTimes\": [],\n  \"topics\": [\n    \"access\",\n    \"activity\",\n    \"config\",\n    \"authentication\"\n  ],\n  \"rotationEnabled\": true,\n  \"retentionMinFreeSpaceRequired\": \"-1\",\n  \"securitySignatureInterval\": \"900\",\n  \"enabled\": true,\n  \"handlerFactory\": \"org.forgerock.openam.audit.events.handlers.CsvAuditEventHandlerFactory\",\n  \"retentionMaxNumberOfHistoryFiles\": \"1\",\n  \"securityPassword\": null,\n  \"securityFilename\": \"%BASE_DIR%/%SERVER_URI%/Logger.jks\",\n  \"bufferingAutoFlush\": false,\n  \"retentionMaxDiskSpaceToUse\": \"-1\",\n  \"rotationFileSuffix\": \"-yyyy.MM.dd-HH.mm.ss\",\n  \"bufferingEnabled\": true,\n  \"rotationMaxFileSize\": \"100000000\",\n  \"location\": \"%BASE_DIR%/%SERVER_URI%/log/\",\n  \"rotationFilePrefix\": null,\n  \"_id\": \"csv\",\n  \"securityEnabled\": false\n}"
		},
		{
			"id": "58011e03-c4ed-711f-f906-1d8ead8d0521",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/modules/datastore?_prettyPrint=true1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449466155,
			"name": "AuthN Module - Update DataStore auth module default settings",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"authenticationLevel\": 1\n}",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "585a42cd-e7e4-e08d-67e4-bbb9c036ae28",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/modules/datastore?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449580363,
			"name": "[BUG] AuthN Module - Read DataStore auth module template",
			"description": "This API call seems to be superfluous to requirements as we don't\ncreate new instances of global authn default settings - Therefore,\nwe don't need to be able to establish default state for a new\ninstance.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "5939f48a-70f4-7f5c-18c3-2788d505acce",
			"headers": "iPlanetDirectoryPro: {{ssoTokenId}}\nContent-Type: application/json\nAccept-API-Version: protocol=1.0, resource=2.0\n",
			"url": "{{openamUrl}}/json/users/demo?_action=changePassword",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "POST",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "users - change password version 2",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460631694772,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{\"currentpassword\":\"changeit\",\"userpassword\":\"newPassword\"}"
		},
		{
			"id": "60f4d5e1-56ce-b222-9276-bf7f3b6b364e",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers/http:&#47;&#47;openam.example.com:18080&#47;openam?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454453256046,
			"name": "[BUG: OPENAM-8277] Servers - Read advanced properties (http://openam.example.com:18080/openam)",
			"description": "Servers seem to be identified by their URL e.g. http://openam.example.com:18080/openam\nHowever, in order to append this _id as a suffix to perform\na read, it must be URL encoded.\nAttempting to GET both of the following URLs fails:\n\n{{openamUrl}}/json/global-config/servers/http%3A%2F%2Fopenam.example.com%3A18080%2Fopenam\n\n{{openamUrl}}/json/global-config/servers/http:%2F%2Fopenam.example.com%3A18080%2Fopenam",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "64538e82-e688-b026-8b95-ca42098ffe04",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/groups?_queryId=",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "groups - get all groups",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460630221297,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{ \"username\": \"newGroup\" }"
		},
		{
			"id": "67acc68a-a9ce-d83a-dc12-ca8fda13e6be",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454277982050,
			"name": "SubSchema - Read audit service CSV handler template",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "6abc4888-26c2-8423-bf28-143b9d606152",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454517614870,
			"name": "[BUG] Servers - Create server",
			"description": "This should include validation to ensure that the server _id is\na valid URL",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "    {\n      \"_id\": \"http://openam.example.com:48080/openam\"\n    }",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "6be03943-ea37-398e-42bb-0fc0b25ec92a",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454447074150,
			"name": "AuthN - Update core auth settings",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"lockoutDurationMultiplier\": 2,\n  \"keyAlias\": \"test\",\n  \"usernameGeneratorEnabled\": true,\n  \"loginPostProcessClass\": [],\n  \"locale\": \"en_US\",\n  \"dynamicProfileCreation\": \"false\",\n  \"defaultAuthLevel\": 0,\n  \"lockoutAttributeName\": null,\n  \"userAttributeSessionMapping\": [],\n  \"aliasAttributeName\": [\n    \"uid\"\n  ],\n  \"moduleBasedAuthEnabled\": true,\n  \"statelessSessionsEnabled\": false,\n  \"identityType\": [\n    \"agent\",\n    \"user\"\n  ],\n  \"invalidAttemptsDataAttributeName\": null,\n  \"loginFailureDuration\": 300,\n  \"userStatusCallbackPlugins\": [],\n  \"sharedSecret\": null,\n  \"loginSuccessUrl\": [\n    \"/openam/console\"\n  ],\n  \"storeInvalidAttemptsInDataStore\": true,\n  \"zeroPageLoginAllowedWithoutReferrer\": true,\n  \"defaultRole\": [],\n  \"zeroPageLoginEnabled\": false,\n  \"zeroPageLoginReferrerWhiteList\": [],\n  \"lockoutWarnUserCount\": 4,\n  \"usernameGeneratorClass\": \"com.sun.identity.authentication.spi.DefaultUserIDGenerator\",\n  \"loginFailureCount\": 5,\n  \"lockoutDuration\": 0,\n  \"loginFailureLockoutMode\": false,\n  \"lockoutEmailAddress\": null,\n  \"lockoutAttributeValue\": null,\n  \"adminAuthModule\": \"ldapService\",\n  \"orgConfig\": \"ldapService\",\n  \"loginFailureUrl\": [\n    \"\"\n  ],\n  \"twoFactorRequired\": false\n}",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "70b459b2-bc33-0ee8-0bf8-08231aac2b54",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277122093,
			"name": "Service - Delete audit service",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "7444d2ca-a6ff-dbbb-6ff9-04055147c2b1",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\ncurrentpassword: changeit\n",
			"url": "{{openamUrl}}/json/groups/testGroup",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460630756638,
			"name": "groups - update group",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"responses": [],
			"rawModeData": "{\"cn\":\"newValue\"}"
		},
		{
			"id": "74bf0b25-133e-c701-5366-0633965afa5b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites/europe?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454452830811,
			"name": "[BUG] Sites - Delete site",
			"description": "Attempt to delete site returns 412 Precondition Failed.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "76a62192-e2c4-77b9-b68b-928ea188bbc3",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454278463114,
			"name": "[TODO :: AME-9555] Service - Read all service instances",
			"description": "Performing a standard CREST CRUDPAQ Query on realm-config/services\nshould return a list of JSON objects that provide summary details\nof the service instances that exist on the specified realm.\n\nThe results of this call should be similar to the results returned\nwhen performing a standard CREST CRUDPAQ Query on \nrealm-config/authentication/modules:\n\n```\n{\n  \"result\": [\n    {\"_id\":\"audit\",\"name\":\"Audit Logging\"},\n    {\"_id\":\"dashboard\",\"name\":\"Dashboard\"},\n    {\"_id\":\"email\",\"name\":\"Email Service\"}\n  ],\n  \"resultCount\":3,\n  \"pagedResultsCookie\":null,\n  \"totalPagedResultsPolicy\":\"EXACT\",\n  \"totalPagedResults\":3,\n  \"remainingPagedResults\":-1\n}\n```\n\nFollow on actions:\n\nTo access any of the resources named in the results, append the service _id as a\nsuffix to the current URL. e.g. realm-config/services/audit",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "7aad15cc-7a89-a00d-f677-41e14a0370c1",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/modules/datastore?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449568845,
			"name": "AuthN Module - Read DataStore auth module schema",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "7daa4ff1-88b5-9ef3-a2ce-7ddd38b81be1",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448500595,
			"name": "[BUG] AuthN - Delete core auth settings",
			"description": "It shouldn't be possible to delete global 'core' settings for authN\nAlthough making this API call fails, it does so with an \"Internal Server\nError\" rather than the more appropriate \"Bad Request\"",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "810162eb-b8b5-3768-9635-8eac380c4668",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/datastore/ds?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454446099063,
			"name": "AuthN Module - Delete DataStore auth module instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "870966d2-82fd-c694-3100-513772423bbc",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277762923,
			"name": "Service - Read audit service template",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "87aeb28f-d295-f665-fb25-7cfd5ef0ea45",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/chains?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449818463,
			"name": "[BUG?] AuthN Chain - Read auth chain schema",
			"description": "What is this call needed for?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "88beafa6-c157-abf4-a131-9de230300926",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV/csv?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277369980,
			"name": "SubSchema - Update audit service CSV handler instance (slow)",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794",
			"rawModeData": "{\n  \"rotationInterval\": \"-1\",\n  \"rotationTimes\": [],\n  \"topics\": [\n    \"access\",\n    \"activity\",\n    \"config\",\n    \"authentication\"\n  ],\n  \"rotationEnabled\": true,\n  \"retentionMinFreeSpaceRequired\": \"-1\",\n  \"securitySignatureInterval\": \"900\",\n  \"enabled\": false,\n  \"handlerFactory\": \"org.forgerock.openam.audit.events.handlers.CsvAuditEventHandlerFactory\",\n  \"retentionMaxNumberOfHistoryFiles\": \"1\",\n  \"securityPassword\": null,\n  \"securityFilename\": \"%BASE_DIR%/%SERVER_URI%/Logger.jks\",\n  \"bufferingAutoFlush\": false,\n  \"retentionMaxDiskSpaceToUse\": \"-1\",\n  \"rotationFileSuffix\": \"-yyyy.MM.dd-HH.mm.ss\",\n  \"bufferingEnabled\": true,\n  \"rotationMaxFileSize\": \"100000000\",\n  \"location\": \"%BASE_DIR%/%SERVER_URI%/log/\",\n  \"rotationFilePrefix\": null,\n  \"_id\": \"csv\",\n  \"securityEnabled\": false\n}"
		},
		{
			"id": "89e29502-3809-75e1-7a98-4533f481c42f",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277982050,
			"name": "SubSchema - Read audit service CSV handler template",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "8cd59646-df65-d6ef-e919-dbeb7dd974ec",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers/server-default/properties?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454508608499,
			"name": "[TODO :: AME-9708] Servers - List all server property tab names",
			"description": "It's debateable whether or not we'll need this API call. The\nalternative would be for the XUI to hardcode the names and ordering\nof these tabs. Though, that may not be good for i18n.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "8d2acb79-b2a6-2ffa-9f4d-8bb1c826570b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit/CSV/csv?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431266136,
			"name": "SubSchema - Delete audit service CSV handler instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "8dd36474-1f16-ca5a-957a-25a3d9328ac7",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services?_action=getCreatableTypes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454281814177,
			"name": "[TODO :: AME-9557] Service - List creatable service types",
			"description": "This request should indicate which service types can be created\nfor the given realm - i.e. a listing of service types that can be\ncreated under a realm, with those that already exist under this\nrealm already filtered out.\n\nThe form of the JSON response to this call is purposely similar\nto the response to /realm-config/services?_queryFilter except that,\nas this call is an action rather than a query filter, it doesn't\nsupport further filter critera nor does it support pagination.\n\n```\n{\n  \"result\": [\n    {\"_id\":\"audit\",\"name\":\"Audit Logging\"},\n    {\"_id\":\"dashboard\",\"name\":\"Dashboard\"},\n    {\"_id\":\"email\",\"name\":\"Email Service\"}\n  ]\n}\n```\n\n\nFollow on actions:\n\nTo access any of the resources named in the results, append the service _id as a\nsuffix to the current URL. e.g. realm-config/services/audit",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "8f2132da-b94c-ea5f-4689-0f0e997fb0c1",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454453124994,
			"name": "Servers - Read all servers",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "97825b45-8eba-cecb-6d36-b0f5027a6b98",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/chains?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449884984,
			"name": "[BUG?] AuthN Chain - Read auth chain template",
			"description": "What is this call needed for?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "9aeed0bf-fca1-8b4e-00c0-64cee790a429",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277724818,
			"name": "Service - Read audit service schema",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "9bf9b0d1-ab91-386f-e29e-e6eb0e0de023",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277022447,
			"name": "Service - Read audit service",
			"description": "Some services are not available under the realm-config/services\nendpoint, and are instead listed under:\nauthentication/modules\nauthentication/chains\nfederations/..\nTherefore, https://bugster.forgerock.org/jira/browse/OPENAM-6074 can\nprobably be closed as 'will not fix'",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "9df6efd0-2705-4510-587e-bce35ad2fbb5",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454430895539,
			"name": "Service - Read audit service schema",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "a18c949c-71b1-9bf1-b448-b7c4195f3094",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit/CSV?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431026522,
			"name": "SubSchema - Create audit service CSV handler instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"rotationInterval\": \"-1\",\n  \"rotationTimes\": [],\n  \"topics\": [\n    \"access\",\n    \"activity\",\n    \"config\",\n    \"authentication\"\n  ],\n  \"rotationEnabled\": true,\n  \"retentionMinFreeSpaceRequired\": \"-1\",\n  \"securitySignatureInterval\": \"900\",\n  \"enabled\": true,\n  \"handlerFactory\": \"org.forgerock.openam.audit.events.handlers.CsvAuditEventHandlerFactory\",\n  \"retentionMaxNumberOfHistoryFiles\": \"1\",\n  \"securityPassword\": null,\n  \"securityFilename\": \"%BASE_DIR%/%SERVER_URI%/Logger.jks\",\n  \"bufferingAutoFlush\": false,\n  \"retentionMaxDiskSpaceToUse\": \"-1\",\n  \"rotationFileSuffix\": \"-yyyy.MM.dd-HH.mm.ss\",\n  \"bufferingEnabled\": true,\n  \"rotationMaxFileSize\": \"100000000\",\n  \"location\": \"%BASE_DIR%/%SERVER_URI%/log/\",\n  \"rotationFilePrefix\": null,\n  \"_id\": \"csv\",\n  \"securityEnabled\": false\n}",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "a9e63ca0-6e6e-eac6-5cbc-5a95adcd1d8b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454429987078,
			"name": "Service - Update audit service",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"auditEnabled\": false,\n  \"fieldFilterPolicy\": [\n    \"/access/http/request/queryParameters/tokenId\",\n    \"/access/http/request/headers/cache-control\",\n    \"/access/http/request/queryParameters/redirect_uri\",\n    \"/access/http/request/queryParameters/Login.Token1\",\n    \"/access/http/request/headers/accept-language\",\n    \"/config/before\",\n    \"/access/http/request/headers/%AM_AUTH_COOKIE_NAME%\",\n    \"/config/after\",\n    \"/access/http/request/queryParameters/access_token\",\n    \"/access/http/request/headers/X-OpenAM-Password\",\n    \"/access/http/request/queryParameters/id_token_hint\",\n    \"/access/http/request/headers/proxy-authorization\",\n    \"/access/http/request/queryParameters/IDToken1\",\n    \"/access/http/request/queryParameters/requester\",\n    \"/access/http/request/headers/connection\",\n    \"/access/http/request/queryParameters/sessionUpgradeSSOTokenId\",\n    \"/access/http/request/headers/content-type\",\n    \"/access/http/request/cookies/%AM_COOKIE_NAME%\",\n    \"/access/http/request/headers/accept-encoding\",\n    \"/access/http/request/headers/authorization\",\n    \"/access/http/request/headers/content-length\",\n    \"/access/http/request/headers/%AM_COOKIE_NAME%\"\n  ]\n}",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "ae47f6f4-6b73-2b13-821c-96cb92ea8e85",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_action=getCreatableTypes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454366878709,
			"name": "[TODO :: AME-9667] SubSchema - List creatable subschema types",
			"description": "This request should indicate which SubSchema types can be created\nfor the given service - i.e. a listing of SubSchema types that can be\ncreated, with those that already exist in their maximum quantity\nalready filtered out.\n\nThe form of the JSON response to this call is purposely similar\nto the response to a _queryFilter except that, as this call is\nan action rather than a query filter, it doesn't support further\nfilter critera nor does it support pagination.\n\n```\n{\n  \"result\": [\n    {\"_id\":\"CSV\",\"name\":\"CSV\"},\n    {\"_id\":\"JDBC\",\"name\":\"JDBC\"},\n    {\"_id\":\"Syslog\",\"name\":\"Syslog\"}\n  ]\n}\n```\n\nFollow on actions:\n\nTo query for instances of any SubSchema type, append _id as a\nsuffix to the current URL. e.g. realm-config/services/audit/CSV?_queryFilter=true\n\nTo request the schema or template for any SubSchema type, append _id as a\nsuffix to the current URL and specify the desired _action.\ne.g. realm-config/services/audit/CSV?_action=schema",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "b18aecaa-2d89-f1ed-e721-be3e3e9a1af2",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454447115370,
			"name": "[BUG] AuthN - Delete core auth settings",
			"description": "It shouldn't be possible to delete 'core' settings for realm authN",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "b21bf6ed-ee40-00de-02ca-6cc9654f6b5d",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services?_action=getAllTypes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454365358081,
			"name": "[TODO :: AME-XXXX] Service - List all service types",
			"description": "This request should list all service types that can be added to\na realm - i.e. a listing of service types that can be\ncreated under a realm, including any that already exist under this\nrealm.\n\nThe form of the JSON response to this call is purposely similar\nto the response to /realm-config/services?_queryFilter except that,\nas this call is an action rather than a query filter, it doesn't\nsupport further filter critera nor does it support pagination.\n\n```\n{\n  \"result\": [\n    {\"_id\":\"audit\",\"name\":\"Audit Logging\"},\n    {\"_id\":\"dashboard\",\"name\":\"Dashboard\"},\n    {\"_id\":\"email\",\"name\":\"Email Service\"}\n  ]\n}\n```\n\nFollow on actions:\n\nTo access any of the resources named in the results, append the service _id as a\nsuffix to the current URL. e.g. realm-config/services/audit",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "b2cd841a-b222-7913-c06f-2e9880eebea8",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\ncurrentpassword: changeit\n",
			"url": "{{openamUrl}}/json/users/demo",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "PUT",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "users - update user",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460628998307,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{\"sn\":\"newValue\"}"
		},
		{
			"id": "b3ff4a4b-d71c-3138-7a44-60c1400deee7",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_action=getCreatableTypes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431380042,
			"name": "[TODO :: AME-9667] SubSchema - List creatable subschema types",
			"description": "This request should indicate which SubSchema types can be created\nfor the given service - i.e. a listing of SubSchema types that can be\ncreated, with those that already exist in their maximum quantity\nalready filtered out.\n\nThe form of the JSON response to this call is purposely similar\nto the response to a _queryFilter except that, as this call is\nan action rather than a query filter, it doesn't support further\nfilter critera nor does it support pagination.\n\n```\n{\n  \"result\": [\n    {\"_id\":\"CSV\",\"name\":\"CSV\"},\n    {\"_id\":\"JDBC\",\"name\":\"JDBC\"},\n    {\"_id\":\"Syslog\",\"name\":\"Syslog\"}\n  ]\n}\n```\n\nFollow on actions:\n\nTo query for instances of any SubSchema type, append _id as a\nsuffix to the current URL. e.g. global-config/services/audit/CSV?_queryFilter=true\n\nTo request the schema or template for any SubSchema type, append _id as a\nsuffix to the current URL and specify the desired _action.\ne.g. global-config/services/audit/CSV?_action=schema",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "b46866b8-a3eb-9cc1-0945-c53d3ef107ba",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/chains?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449795207,
			"name": "[BUG?] AuthN Chain - Delete auth chain instance",
			"description": "What is this deleting?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "b5967319-a21b-8183-8512-d20a5ea56636",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/servers?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454453777371,
			"name": "Servers - Read server schema",
			"description": "NB. This schema includes read-only fields",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "9882a0b5-c3ce-7633-f74f-3cfbf2aa5671"
		},
		{
			"id": "b7c52332-c666-c264-7cb0-8630aaba246c",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV/csv?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454277316725,
			"name": "SubSchema - Read audit service CSV handler instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "bb98deb9-7d34-8d28-9f52-a325ee57f5d9",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454446613447,
			"name": "AuthN Module - List all module instances",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff",
			"isFromCollection": true
		},
		{
			"id": "bd0c0c9a-af4c-002d-0985-af34d9dea01b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454365437665,
			"name": "[TODO :: AME-9665] SubSchema - Read all audit service handler instances",
			"description": "Performing a standard CREST CRUDPAQ Query on realm-config/services/audit\nshould return a list of JSON objects that provide summary details\nof the SubSchema instances (of all SubSchema types).\n\nThe results of this call should be similar to the results returned\nwhen performing a standard CREST CRUDPAQ Query on \nrealm-config/authentication/modules:\n\n```\n{\n  \"result\": [\n    {\"_id\":\"csv1\",\"type\":\"CSV\",\"typeDescription\":\"CSV\"},\n    {\"_id\":\"csv2\",\"type\":\"CSV\",\"typeDescription\":\"CSV\"},\n    {\"_id\":\"jdbc\",\"type\":\"JDBC\",\"typeDescription\":\"JDBC\"}\n  ],\n  \"resultCount\":3,\n  \"pagedResultsCookie\":null,\n  \"totalPagedResultsPolicy\":\"EXACT\",\n  \"totalPagedResults\":3,\n  \"remainingPagedResults\":-1\n}\n```\n\nFollow on actions:\n\nTo access any of the resources named in the results, append type/_id as a\nsuffix to the current URL. e.g. realm-config/services/audit/CSV/csv1\n\nNB. It's already possible to perform a Query on realm-config/services/audit/CSV\nso this call may not be needed. Instead of making this call, clients can establish\nwhich SubSchema types exist (using realm-config/services/audit?_action=getAllTypes) \nand then query for instances of each type.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "c00c5183-6e0a-4949-2697-3fd47e273bfd",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/users/demo",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460629395362,
			"name": "users - get user",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"responses": []
		},
		{
			"id": "c273d4a5-ee4d-4166-e6cf-9ecf0ee1915e",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_action=getAllTypes",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454367049854,
			"name": "[TODO :: AME-9668] SubSchema - List all subschema types",
			"description": "This request should list all SubSchema types can be added to the\ncurrent service - i.e. a listing of SubSchema types that can be\ncreated, including any that already exist in their maximum quantity.\n\nThe form of the JSON response to this call is purposely similar\nto the response to a _queryFilter except that, as this call is\nan action rather than a query filter, it doesn't support further\nfilter critera nor does it support pagination.\n\n```\n{\n  \"result\": [\n    {\"_id\":\"CSV\",\"name\":\"CSV\"},\n    {\"_id\":\"JDBC\",\"name\":\"JDBC\"},\n    {\"_id\":\"Syslog\",\"name\":\"Syslog\"}\n  ]\n}\n```\n\nFollow on actions:\n\nTo query for instances of any SubSchema type, append _id as a\nsuffix to the current URL. e.g. realm-config/services/audit/CSV?_queryFilter=true\n\nTo request the schema or template for any SubSchema type, append _id as a\nsuffix to the current URL and specify the desired _action.\ne.g. realm-config/services/audit/CSV?_action=schema",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "c9481f19-ac02-e132-2c34-970f258b551c",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448359541,
			"name": "AuthN - Update core auth settings",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"lockoutDurationMultiplier\": 2,\n  \"keyAlias\": \"test\",\n  \"usernameGeneratorEnabled\": true,\n  \"loginPostProcessClass\": [],\n  \"locale\": \"en_US\",\n  \"dynamicProfileCreation\": \"false\",\n  \"defaultAuthLevel\": 0,\n  \"lockoutAttributeName\": null,\n  \"userAttributeSessionMapping\": [],\n  \"aliasAttributeName\": [\n    \"uid\"\n  ],\n  \"moduleBasedAuthEnabled\": true,\n  \"statelessSessionsEnabled\": false,\n  \"identityType\": [\n    \"agent\",\n    \"user\"\n  ],\n  \"invalidAttemptsDataAttributeName\": null,\n  \"loginFailureDuration\": 300,\n  \"userStatusCallbackPlugins\": [],\n  \"sharedSecret\": null,\n  \"loginSuccessUrl\": [\n    \"/openam/console\"\n  ],\n  \"storeInvalidAttemptsInDataStore\": true,\n  \"zeroPageLoginAllowedWithoutReferrer\": true,\n  \"defaultRole\": [],\n  \"zeroPageLoginEnabled\": false,\n  \"zeroPageLoginReferrerWhiteList\": [],\n  \"lockoutWarnUserCount\": 4,\n  \"usernameGeneratorClass\": \"com.sun.identity.authentication.spi.DefaultUserIDGenerator\",\n  \"loginFailureCount\": 5,\n  \"lockoutDuration\": 0,\n  \"loginFailureLockoutMode\": false,\n  \"lockoutEmailAddress\": null,\n  \"lockoutAttributeValue\": null,\n  \"adminAuthModule\": \"ldapService\",\n  \"orgConfig\": \"ldapService\",\n  \"loginFailureUrl\": [\n    \"\"\n  ],\n  \"twoFactorRequired\": false\n}",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "cc5de208-3761-bfde-17b6-037edd7a7def",
			"headers": "olduserpassword: changeit\niPlanetDirectoryPro: {{ssoTokenId}}\nContent-Type: application/json\nAccept-API-Version: protocol=1.0, resource=1.1\n",
			"url": "{{openamUrl}}/json/users/demo",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "PUT",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"data": [],
			"dataMode": "raw",
			"name": "users - change password",
			"description": "",
			"descriptionFormat": "html",
			"time": 1460631662946,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "ecd1bf2f-96c7-6a07-4b89-72f48e153583",
			"rawModeData": "{\"userPassword\":\"newPassword\"}"
		},
		{
			"id": "cda55239-32f4-d3c9-052f-4b90a7f9cb1f",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454430921729,
			"name": "[BUG] Service - Read audit service template",
			"description": "This API call seems to be superfluous to requirements as we don't\ncreate new instances of global service configuration - Therefore,\nwe don't need to be able to establish default state for a new\ninstance.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "ce1315bb-1d75-717a-52ae-6d95e57a0283",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/modules/datastore?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449381446,
			"name": "AuthN Module - Read DataStore auth module default settings",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "d1041b3e-e1ef-a751-d6d3-2b65a167da62",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/datastore?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454446215925,
			"name": "AuthN Module - Read DataStore auth module template",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "d4705f3d-4804-db5f-70f0-e85c4dfb5b39",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit/CSV?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454278213584,
			"name": "SubSchema - Read all audit service CSV handler instances",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794"
		},
		{
			"id": "d4e18da4-7804-3475-bc9c-6a5c5acb78bd",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454446795324,
			"name": "AuthN - Read core auth settings",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "d51d1836-37d6-0783-95a9-cdc2d782b554",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/modules/datastore?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449490508,
			"name": "[BUG] AuthN Module - Delete DataStore auth module default settings",
			"description": "It shouldn't be possible to delete default settings for an authN module",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "d6acd9e7-b20a-d01d-840d-0c7985bbf218",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites?_action=template",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454505963094,
			"name": "[BUG] Sites - Read site template",
			"description": "This API call doesn't return anything useful - Should it?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "d86d4770-c9e4-9a4f-0279-26a8229f35cf",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit/CSV?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431086362,
			"name": "SubSchema - Read all audit service CSV handler instances",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "daeb34c0-4987-3cfa-2790-3d0790218ab5",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454450371577,
			"name": "Sites - Read all sites",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "db27166b-36e0-213f-a062-71a0b3c37a64",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit/CSV?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431329343,
			"name": "[TODO :: AME-9666] SubSchema - Read audit service CSV handler schema",
			"description": "It doesn't seem to be possible to request the schema for a SubSchema.\n\nThis could be a peculiarity of the Audit service so it's worth trying\nthis against another global service configuration that has SubSchema.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "dcbebfd4-8485-954d-97b6-9780d5270c79",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/services/audit?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1454276993891,
			"name": "Service - Create audit service",
			"description": "It should not be possible to create a second instance of a given\nservice: https://bugster.forgerock.org/jira/browse/OPENAM-6107",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "388744f6-e447-8246-185c-71297b98b794",
			"rawModeData": "{}"
		},
		{
			"id": "ddcb0a6d-e3ed-362d-b33b-6335c756c7a2",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/datastore/ds?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454446059781,
			"name": "AuthN Module - Update DataStore auth module instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"authenticationLevel\": 1,\n  \"_id\": \"ds\"\n}",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "e1412b51-9da1-3406-27d6-38418aaf0522",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit/CSV/csv?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431204767,
			"name": "SubSchema - Update audit service CSV handler instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n  \"rotationInterval\": \"-1\",\n  \"rotationTimes\": [],\n  \"topics\": [\n    \"access\",\n    \"activity\",\n    \"config\",\n    \"authentication\"\n  ],\n  \"rotationEnabled\": true,\n  \"retentionMinFreeSpaceRequired\": \"-1\",\n  \"securitySignatureInterval\": \"900\",\n  \"enabled\": false,\n  \"handlerFactory\": \"org.forgerock.openam.audit.events.handlers.CsvAuditEventHandlerFactory\",\n  \"retentionMaxNumberOfHistoryFiles\": \"1\",\n  \"securityPassword\": null,\n  \"securityFilename\": \"%BASE_DIR%/%SERVER_URI%/Logger.jks\",\n  \"bufferingAutoFlush\": false,\n  \"retentionMaxDiskSpaceToUse\": \"-1\",\n  \"rotationFileSuffix\": \"-yyyy.MM.dd-HH.mm.ss\",\n  \"bufferingEnabled\": true,\n  \"rotationMaxFileSize\": \"100000000\",\n  \"location\": \"%BASE_DIR%/%SERVER_URI%/log/\",\n  \"rotationFilePrefix\": null,\n  \"_id\": \"csv\",\n  \"securityEnabled\": false\n}",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "e255d9ed-83d3-3125-186d-fa69fc084f5f",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/modules/types?_queryFilter=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448655906,
			"name": "[IMPROVEMENT :: AME-9707] AuthN Module - List all auth module types",
			"description": "We plan to use a getCreatableTypes action to obtain a list of service\nand subschema types from the parent container. Therefore, to keep\nthe REST SMS API consistent, we should update this call to use a\nsimilarly named action rather than using the URL path suffix /types.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "e3d9f5bd-e68e-0411-f329-6aeb8c0e8e3b",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/modules/types?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454680604172,
			"name": "[TODO :: AME-9707] AuthN Module - List all module types",
			"description": "There needs to be an API call that returns something like:\n\n```\n{\n  \"result\" : [\n    {\"_id\":\"radius\",\"name\":\"RADIUS\"},\n    {\"_id\":\"windowsnt\",\"name\":\"Windows NT\"},\n    {\"_id\":\"deviceidsave\",\"name\":\"Device Id (Save)\"},\n    {\"_id\":\"authenticatoroath\",\"name\":\"ForgeRock Authenticator (OATH)\"},\n    ...,\n    {\"_id\":\"membership\",\"name\":\"Membership\"}\n  ],\n  \"resultCount\":25,\n  \"pagedResultsCookie\":null,\n  \"totalPagedResultsPolicy\":\"NONE\",\n  \"totalPagedResults\":-1,\n  \"remainingPagedResults\":-1\n}\n```\n\nThis is needed so that a list of links can be presented similar to those shown on the Configuration > Authentication screen.",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "e480014d-b7f8-ee02-4e2a-e38720ae6b50",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains?_queryFilter=true&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454447626880,
			"name": "AuthN Chain - List all chain instances",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "e5e04d59-4eac-443a-c8a2-3f3cd65dbbcb",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains?_action=schema",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448155473,
			"name": "AuthN Chain - Read auth chain schema",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "eb271a08-558c-5f9c-2048-a88b913b8583",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/realm-config/authentication/chains?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448021588,
			"name": "AuthN Chain - Create auth chain instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n    \"_id\": \"chain1\"\n}",
			"folder": "cfe78fc0-91d2-a002-0a54-abe1f20814ff"
		},
		{
			"id": "f2e3d9c3-37ee-bc1d-1aa8-484bf8f885b1",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/sites?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454452536211,
			"name": "Sites - Create site",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "    {\n      \"_id\": \"europe\",\n      \"url\": \"http://openam.example.com:28080/openam\",\n      \"secondaryURLs\": []\n    }",
			"folder": "f0fdc1f7-2b9e-1ac2-d52b-99c4508afd08"
		},
		{
			"id": "f5a955d4-fca5-c296-190d-38739d2d5f9d",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454448346801,
			"name": "AuthN - Read core auth settings",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		},
		{
			"id": "f898db8d-5493-2d76-c3de-5bf0e1b57f57",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/services/audit/CSV/csv?_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454431052442,
			"name": "SubSchema - Read audit service CSV handler instance",
			"description": "",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"folder": "29458b36-f8f0-e418-10e2-bb4fa5d8dc55"
		},
		{
			"id": "fca9a8e9-2441-a537-6bff-d6137d62ae50",
			"headers": "Content-Type: application/json\niPlanetDirectoryPro: {{ssoTokenId}}\n",
			"url": "{{openamUrl}}/json/global-config/authentication/chains?_action=create&_prettyPrint=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Successful POST request\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454449667076,
			"name": "[BUG?] AuthN Chain - Create auth chain instance",
			"description": "What does this create?",
			"collectionId": "c1e3d1b0-d969-16e5-ff4c-2a2677d4f281",
			"rawModeData": "{\n    \"_id\": \"chain1\"\n}",
			"folder": "736ca65d-50ec-5d2c-4a51-58ac1b52d1a3"
		}
	]
}